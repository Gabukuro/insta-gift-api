name: Go

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:

  test:
    runs-on: ${{ matrix.os }}
    env:
      GO_ENV: test
    strategy:
      matrix:
        go_version: ['1.20']
        os: ['ubuntu-latest']

    services:
      postgres:
        image: postgres:10-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go_version }}

    - name: Install
      run: |
        make install
        go install github.com/jstemmer/go-junit-report@latest

    - name: Test
      run: make test | tee go-test.out && go-junit-report <go-test.out> go-test-report.xml

    - name: Upload Coverage
      uses: actions/upload-artifact@v2
      with:
        name: go-test.out, coverage.out, report-all.xml
        path: go-test.out, coverage.out, report-all.xml
  
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: go build -v -o main cmd/main.go
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.0
      with:
        name: program
        path: main


  analyze_sonar:
    needs: test
    if: ${{ github.ref_name == 'main' }}
    uses: ./.github/workflows/Sonar.yml
    secrets: inherit

  deploy_docker:
    needs: build
    if: ${{ github.ref_name == 'main' }}
    uses: ./.github/workflows/Docker.yml
    secrets: inherit

  deploy_ec2:
    needs: build
    if: ${{ github.ref_name == 'main' }}
    uses: ./.github/workflows/EC2.yml
    secrets: inherit


